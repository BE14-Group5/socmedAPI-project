openapi: 3.0.3
info:
  title: SocMed App API
  description: |-
    Ini adalah dokumentasi API untuk aplikasi media sosial yang dibuat oleh Grup 5

    Project 2, Unit 2
  contact:
    name: Putra
    email: putra123@gmail.com
  version: 1.0.0
servers:
  - url: webisteku.com
    description: digunakan untuk ujicoba
     
tags:
  - name: Users
  - name: Posts
  - name: Comments

paths:
  /registration:
    post:
      tags:
        - "Users"
      description: digunakan untuk mendaftarkan pengguna baru
      summary: register new user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                phone_number:
                  type: string
                password:
                  type: string
                  format: password
                profile_photo:
                  type: string
                  format: binary
                background_photo:
                  type: string
                  format: binary
            example:
              email: "putra123@gmail.com"
              name: "Putra"
              phone_number: "08123456789"
              password: "putra123"
              profile_photo: "profile-photo.png"
              background_photo: "background-photo.png"
      responses:
        201:
          description: "Berhasil insert data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  email: "putra123@gmail.com"
                  name: "Putra"
                  phone_number: "08123456789"
                  password: "putra123"
                  profile_photo: "profile-photo.png"
                  background_photo: "background-photo.png"
                message: "success register"
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
  
  /login:
    post:
      tags:
        - "Users"
      description: digunakan untuk masuk kedalam sistem
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: putra123@gmail.com
              password: "putra123"
      responses:
        200:
          description: "success login"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  id: 1
                  nama: "Putra"
                  email: "putra123@gmail.com"
                  phone_number: "08123456789"
                  profile_photo: "profile_photo.png"
                  background_photo: "background_photo.png"
                  token: "dfeft434r34t3t"
                message: "login success"
        401:
          description: "wrong password"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "wrong password"
        404:
          description: "user not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "wrong email"
        500:
          $ref: '#/components/responses/500'
  /users:
    get:
      tags:
        - "Users"
      description: "digunakan untuk melihat profil user berdasarkan ID"
      summary: "user's profile"
      security:
        - bearerAuth: [Alt3rra]
      responses:
        200:
          description: "sukses menampilkan data user"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  id: 1
                  email: "putra123@gmail.com"
                  name: "Putra"
                  phone_number: "08123456789"
                  profile_photo: "profile_photo.png"
                  background_photo: "background_photo.png"
                message: "get profile success"
        404:
          description: "data tidak ditemukan"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "data not found"
        500:
          $ref: '#/components/responses/500'
    put:
      tags:
        - "Users"
      description: digunakan untuk memperbarui data pengguna
      summary: update user's data
      security:
        - bearerAuth: [Alt3rra]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                phone_number:
                  type: string
                password:
                  type: string
                  format: password
                profile_photo:
                  type: string
                  format: binary
                background_photo:
                  type: string
                  format: binary
            example:
              id: 1
              email: "putra123@gmail.com"
              name: "Putra"
              phone_number: "08123456789"
              password: "putra123"
              profile_photo: "profile-photo.png"
              background_photo: "background-photo.png"
      responses:
        200:
          description: "Berhasil memperbarui data pengguna"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  id: 1
                  email: "putra123@gmail.com"
                  name: "Putra"
                  password: "jdbuindwoihnfwaifwjaifnwaonf"
                  phone_number: "08123456789"
                  profile_photo: "profile-photo.png"
                  background_photo: "background-photo.png"
                message: "success update user's data"
        404:
          description: "Kesalahan input data dari user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "data tidak ditemukan"
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Users"
      description: "digunakan untuk menghapus data user"
      summary: "delete user's account"
      security:
        - bearerAuth: [Alt3rra]
      responses:
        200:
          description: "success deleted user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete user"
        404:
          description: "ID not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "user not found"
        500:
          $ref: '#/components/responses/500'
  
  /allposts:
    get:
      tags:
        - "Posts"
      description: digunakan untuk melihat semua postingan
      summary: view all posts
      responses:
        200:
          description: "berhasil lihat data postingan"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObjectArr'
              example:
                data:
                  - 
                    id: 1
                    content: hari ini cerah sekali
                    photo: "photo1.png"
                    user_id: 1
                    name: "Putra"
                    created_at: "2023-01-18T15:08:57.961+07:00"
                    comments:
                      -
                        id: 1
                        user_id: 1
                        name: "Fauzan"
                        post_id: 1
                        created_at: "2023-01-18T15:26:53.423+07:00"
                        content: "keren"
                      - 
                        id: 2
                        user_id: 2
                        name: "James"
                        post_id: 1
                        created_at: "2023-01-19T15:26:53.423+07:00"
                        content: "manteub"
                  -
                    id: 2
                    content: masak sendiri
                    photo: "photo1.png"
                    user_id: 10
                    name: "Kirana"
                    created_at: "2023-01-28T15:08:57.961+07:00"
                    comments: 
                message: "success show all user posts"
        404:
          description: "kesalahan input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
              example:
                message: "post not found"
        500:
          $ref: '#/components/responses/500'
  /posts:
    get:
      tags:
        - "Posts"
      description: digunakan untuk melihat semua postingan user yang sedang login
      summary: view login user's posts
      security:
      - bearerAuth: [Alt3rra]
      responses:
        200:
          description: "berhasil lihat data postingan"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObjectArr'
              example:
                data:
                  - 
                    id: 1
                    content: hari ini cerah sekali
                    photo: "photo1.png"
                    user_id: 1
                    name: "Putra"
                    created_at: "2023-01-18T15:08:57.961+07:00"
                    comments:
                      -
                        id: 1
                        user_id: 1
                        name: "Fauzan"
                        post_id: 1
                        created_at: "2023-01-18T15:26:53.423+07:00"
                        content: "keren"
                      - 
                        id: 2
                        user_id: 2
                        name: "James"
                        post_id: 1
                        created_at: "2023-01-19T15:26:53.423+07:00"
                        content: "manteub"
                message: "success show all my post"
        404:
          description: "kesalahan input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
              example:
                message: "post not found"
        500:
          $ref: '#/components/responses/500'
    post:
      tags:
        - "Posts"
      description: digunakan untuk masuk membuat postingan
      summary: "post something"
      security:
        - bearerAuth: [Alt3rra]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                photo:
                  type: string
                  format: binary
            example:
              content: "hari ini cerah sekali"
              photo: "photo.png"
      responses:
        201:
          description: "Berhasil posting"
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/responseObject'
                example:
                  data:
                    body: "hari ini cerah sekali"
                    photo: "photo.png"
                  message: "success posting"   
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
  /posts/{id}:
    put:
      tags:
        - "Posts"
      description: digunakan untuk masuk memperbarui postingan
      summary: "update post"
      security:
        - bearerAuth: [Alt3rra]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                photo:
                  type: string
                  format: binary
            example:
              content: hari ini cukup berawan
              photo: "photo.png"
      responses:
        200:
          description: "Berhasil memperbarui data pengguna"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  cerita: hari ini cukup berawan
                  photo: ""
        404:
          description: "Kesalahan input data dari user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "post not found"
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Posts"
      description: "digunakan untuk menghapus postingan user"
      summary: "delete user's post"
      security:
        - bearerAuth: [Alt3rra]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "success deleted post"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete post"
        404:
          description: "ID not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "post not found"
        500:
          $ref: '#/components/responses/500'
    get:
        tags:
          - "Posts"
        description: digunakan untuk melihat semua postingan
        summary: view post by id
        security:
        - bearerAuth: [Alt3rra]
        parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        responses:
          200:
            description: "berhasil lihat data user"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/responseObject'
                example:
                  data:
                    - 
                      id: 1
                      content: hari ini cerah sekali
                      photo: "photo1.png"
                      user_id: 1
                      name: "Putra"
                      created_at: "2023-01-18T15:08:57.961+07:00"
                      comments:
                        -
                          id: 1
                          user_id: 1
                          name: "Fauzan"
                          post_id: 1
                          created_at: "2023-01-18T15:26:53.423+07:00"
                          content: "keren"
                        - 
                          id: 2
                          user_id: 2
                          name: "James"
                          post_id: 1
                          created_at: "2023-01-19T15:26:53.423+07:00"
                          content: "manteub"
                  message: "success get post"
          404:
            description: "kesalahan input data"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message: 
                      type: string
                example:
                  message: "post not found"
          500:
            $ref: '#/components/responses/500'

  /comments:
    post:
      tags:
        - "Comments"
      description: digunakan untuk masuk membuat komentar suatu postingan
      summary: "Comment something"
      security:
        - bearerAuth: [Alt3rra]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                post_ID:
                  type: integer
                content:
                  type: string
            example:
              post_ID: 1
              content: "hari ini cerah sekali"
      responses:
        201:
          description: "Berhasil comment"
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/responseObject'
                example:
                  data:
                    id: 3
                    user_id: 1
                    name: "Putra"
                    post_id: 2
                    created_at: "2023-01-18T21:36:06.773+07:00"
                    content: "bagus sekali"
                  message: "success comment"   
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    # get:
    #     tags:
    #       - "Comments"
    #     description: digunakan untuk melihat semua komentar pada postingan tertentu
    #     summary: view all comments
    #     responses:
    #       200:
    #         description: "berhasil lihat comments"
    #         content:
    #           application/json:
    #             schema:
    #               $ref: '#/components/schemas/responseObjectArr'
    #             example:
    #               data:
    #                 - content: "bagus"
    #                 - content: "keren"
    #                 - content: "mantap"
    #       404:
    #         description: "kesalahan input data"
    #         content:
    #           application/json:
    #             schema:
    #               type: object
    #               properties:
    #                 message: 
    #                   type: string
    #             example:
    #               message: "post not found"
    #       500:
    #         $ref: '#/components/responses/500'

  /comments/{comment-id}:
    put:
      tags:
        - "Comments"
      description: digunakan untuk edit komentar
      summary: "update komentar"
      security:
        - bearerAuth: [Alt3rra]
      parameters:
        - name: comment-id
          in: path
          required: true
          schema:
            type: integer    
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
            example:
              content: oke
      responses:
        200:
          description: "Berhasil memperbarui komentar"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseObject'
              example:
                data:
                  content: "oke"
        404:
          description: "Kesalahan input data dari user"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "comment not found"
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Comments"
      description: "digunakan untuk menghapus komentar user"
      summary: "delete user's comment"
      security:
        - bearerAuth: [Alt3rra]
      parameters:
        - name: comment-id
          in: path
          required: true
          schema:
            type: integer  
      responses:
        200:
          description: "success delete comment"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete comment"
        404:
          description: "ID not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "comment not found"
        500:
          $ref: '#/components/responses/500'

components:
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
    responseObjectArr:
      type: object
      properties:
        data:
          type: array
          items: 
            type: object
        message:
          type: string
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    400:
      description: "Kesalahan dari user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "wrong input"
    500:
      description: "Kesalahan dari server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: "server problem"